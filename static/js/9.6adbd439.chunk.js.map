{"version":3,"sources":["modules/auth/components/year-date-textfield.tsx","components/calendar.tsx","modules/auth/pages/doctor-signup/page-2.tsx","modules/auth/components/divider.tsx"],"names":["Column","styled","div","CalendarIcon","DateTextField","props","field","onFocus","style","width","placeholder","hint","onChange","e","target","value","className","needErrorHandle","error","fontSize","Calendar","weekdays","startedFromSun","months","isOpen","minYear","maxYear","confirmMessage","clearMessage","onSave","getDates","year","month","dates","need","Date","getDay","dayInLastMonth","getDate","i","date","obj","disable","weekday","push","dayAmount","lastDay","length","need2","compareDates","date1","date2","getFullYear","getMonth","getDatesFromMon","newDates","firstEnable","find","shift","beforeDates","concat","newLast","last","firstNextDisabled","slice","findIndex","groupByWeek","thisDates","countWeeks","Math","ceil","weeks","useState","monthIndex","setMonthIndex","setYear","selectedDate","setSelectedDate","setWeeks","styles","calendarContainer","minWidth","maxWidth","Fragment","classnames","day","toString","formatedSelectedDate","aria-hidden","onClick","onClose","abs","id","map","week","key","classes","today","Page2","Form","FormColumn","CalendarWrapper","HalfOfWidth","Row","observer","signupUIStore","pageIndex","text","height","instituteError","setInstitute","institute","validator","type","specialityError","setSpeciality","speciality","studyYearsError","setStudyYears","studyYears","blankSeriesError","setBlankSeries","blankSeries","zIndex","isCalendarExist","onCalendarDateSelected","isCalendarOpen","onCalendarClose","issueDateError","val","issueDate","onCalendarOpen","blankNumberError","setBlankNumber","blankNumber","minDeviceWidth","maxDeviceWidth","content","onConfirm","goNextPage","goBeforePage","Container","Line","Text","Divider"],"mappings":"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","file":"static/js/9.6adbd439.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n// Components\r\nimport { Input, ErrorText, Row, Field } from \"../../../components/text-field\";\r\n\r\ntype Props = {\r\n    styles?: {\r\n        input?: object;\r\n        container?: object;\r\n    }\r\n    isOk?: boolean;\r\n    hint?: string;\r\n    onChange: (val: string) => void;\r\n    value: string;\r\n    error?: string;\r\n    field?: string;\r\n    onFocus?: () => void;\r\n    needErrorHandle?: boolean;\r\n}\r\n\r\nconst Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\n\r\nconst CalendarIcon = styled.div`\r\n    color: #ccc;\r\n    border-radius: 50%;\r\n    width: 14px;\r\n    position: relative;\r\n    right: 29px;\r\n    cursor: pointer;\r\n\r\n`;\r\n\r\n\r\nconst DateTextField: React.FC<Props> = (props: Props) => {\r\n\r\n    const styles = { width: \"calc(100% + 14px)\" }\r\n\r\n    return <Column>\r\n        <Field>{props.field}</Field>\r\n        <Row>\r\n            <Input\r\n                onFocus={props.onFocus}\r\n                {/* \r\n          // @ts-ignore */ ...{}}\r\n                style={styles}\r\n                placeholder={props.hint}\r\n                onChange={(e) => props.onChange(e.target.value)}\r\n                value={props.value}\r\n            />\r\n            <CalendarIcon><i className=\"fa fa-calendar-o\"></i></CalendarIcon>\r\n        </Row>\r\n        {\r\n            !props.needErrorHandle ? props.error ? <ErrorText>{props.error}</ErrorText> : <p style={{ fontSize: \"12px\" }}>⠀</p> : \"\"\r\n        }\r\n    </Column>\r\n}\r\n\r\nexport default DateTextField;","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./styles/calendar.css\";\r\n\r\ntype Props = {\r\n    isOpen?: boolean;\r\n    minWidth?: string;\r\n    maxWidth?: string;\r\n    startedFromSun?: boolean;\r\n    months?: string[];\r\n    weekdays?: string[];\r\n    onClose?: () => void;\r\n    minYear?: number;\r\n    maxYear?: number;\r\n    confirmMessage?: string;\r\n    clearMessage?: string;\r\n    onSave?: (date: Date) => void;\r\n};\r\n\r\ntype DateObj = {\r\n    disable: boolean;\r\n    weekday: \"mon\" | \"tue\" | \"wed\" | \"thu\" | \"fri\" | \"sat\" | \"sun\" | string;\r\n    date: Date;\r\n}\r\n\r\n\r\nconst Calendar: React.FC<Props> = (props: Props) => {\r\n\r\n    // Props\r\n    const weekdays = props.weekdays ?? [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n    const startedFromSun = props.startedFromSun ?? false;\r\n    const months = props.months ?? [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\r\n    const isOpen = props.isOpen ?? true;\r\n    const minYear = props.minYear ?? 1500;\r\n    const maxYear = props.minYear ?? 3000;\r\n    const confirmMessage = props.confirmMessage ?? \"Выбрать\";\r\n    const clearMessage = props.clearMessage ?? \"Очистить\";\r\n    const onSave = props.onSave ?? function () { };\r\n\r\n\r\n    const getDates = (year: number, month: number): Array<DateObj> => {\r\n\r\n        let dates: DateObj[] = [];\r\n\r\n        const firstDay = new Date(year, month, 1);\r\n\r\n        // Before\r\n        const need = firstDay.getDay();\r\n        const dayInLastMonth = new Date(year, month, 0).getDate();\r\n        for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\r\n            const date = new Date(year, month - 1, i);\r\n            const obj: DateObj = {\r\n                date: date,\r\n                disable: true,\r\n                weekday: weekdays[date.getDay()],\r\n            }\r\n            dates.push(obj)\r\n        }\r\n\r\n        // This month\r\n        const dayAmount = new Date(year, month + 1, 0).getDate();\r\n        for (let i = 1; i <= dayAmount; i++) {\r\n            const date = new Date(year, month, i);\r\n            const obj: DateObj = {\r\n                date: date,\r\n                disable: false,\r\n                weekday: weekdays[date.getDay()],\r\n            }\r\n            dates.push(obj);\r\n        }\r\n\r\n        // After\r\n        const lastDay = dates[dates.length - 1].date;\r\n        if (lastDay.getDay() !== 6) {\r\n            const need2 = 6 - lastDay.getDay();\r\n            for (let i = 1; i <= need2; i++) {\r\n                const date = new Date(year, month + 1, i);\r\n                const obj: DateObj = {\r\n                    date: date,\r\n                    disable: true,\r\n                    weekday: weekdays[date.getDay()],\r\n                }\r\n                dates.push(obj);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return dates;\r\n    }\r\n\r\n    const compareDates = (date1: Date, date2: Date | null) => {\r\n        if (!date2) return false;\r\n\r\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const formatedSelectedDate = () => {\r\n        let date = selectedDate;\r\n\r\n        if (selectedDate.getFullYear() === 1000) {\r\n            date = new Date();\r\n        }\r\n\r\n        let day = date.getDate().toString();\r\n        let month = (date.getMonth() + 1).toString();\r\n\r\n        if (day.length === 1) {\r\n            day = \"0\" + day;\r\n        }\r\n\r\n        if (month.length === 1) {\r\n            month = \"0\" + month;\r\n        }\r\n\r\n\r\n        return `${day} / ${month} / ${date.getFullYear()}`\r\n    }\r\n\r\n    const getDatesFromMon = (year: number, month: number): Array<DateObj> => {\r\n\r\n        let newDates = getDates(year, month);\r\n        const firstEnable = newDates.find(e => !e.disable);\r\n\r\n        if (firstEnable?.date.getDay() !== 0) {\r\n            newDates.shift();\r\n        } else {\r\n            let beforeDates = [];\r\n            const need = 6;\r\n            const dayInLastMonth = new Date(year, month, 0).getDate();\r\n            for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\r\n                const date = new Date(year, month - 1, i);\r\n                const obj: DateObj = {\r\n                    date: date,\r\n                    disable: true,\r\n                    weekday: weekdays[date.getDay()],\r\n                }\r\n                beforeDates.push(obj);\r\n            }\r\n            newDates = beforeDates.concat(newDates);\r\n        }\r\n\r\n\r\n\r\n\r\n        const last = new Date(newDates[newDates.length - 1].date);\r\n        let newLast;\r\n        if (newDates[newDates.length - 1].disable) {\r\n            newLast = new Date(last.getFullYear(), last.getMonth(), last.getDate() + 1);\r\n        } else {\r\n            newLast = new Date(last.getFullYear(), last.getMonth() + 1, last.getDate() + 1);\r\n        }\r\n\r\n        newDates.push({\r\n            date: newLast,\r\n            disable: true,\r\n            weekday: weekdays[newLast.getDay()],\r\n        });\r\n\r\n\r\n\r\n        const firstNextDisabled = newDates.slice(7).findIndex(e => e.disable);\r\n        if (firstNextDisabled + 14 === newDates.length) {\r\n            newDates = newDates.slice(0, firstNextDisabled + 7);\r\n        }\r\n\r\n\r\n\r\n        return newDates;\r\n\r\n    }\r\n\r\n    const groupByWeek = (thisDates: Array<DateObj>): Array<Array<DateObj>> => {\r\n        const countWeeks = Math.ceil(thisDates.length / 7);\r\n\r\n        let weeks = [];\r\n\r\n        for (let i = 0; i < countWeeks; i++) {\r\n            weeks.push(thisDates.slice(i * 7, (i + 1) * 7))\r\n        }\r\n\r\n\r\n        return weeks;\r\n    }\r\n\r\n    const goMonthForward = () => {\r\n\r\n        if (monthIndex + 1 === 12) {\r\n            setYear(year + 1);\r\n        }\r\n\r\n        setMonthIndex((monthIndex + 1) % 12)\r\n        const newDates = startedFromSun ? getDates(year, (monthIndex + 1) % 12) : getDatesFromMon(year, (monthIndex + 1) % 12);\r\n        setWeeks(groupByWeek(newDates));\r\n    }\r\n\r\n    const goMonthBackward = () => {\r\n        if (monthIndex === 0) {\r\n            setYear(year - 1);\r\n        }\r\n\r\n\r\n        if (monthIndex === 0) {\r\n            setMonthIndex(11)\r\n        } else {\r\n            setMonthIndex(monthIndex - 1)\r\n        }\r\n        const newDates = startedFromSun ? getDates(year, Math.abs(monthIndex - 1) % 12) : getDatesFromMon(year, (monthIndex - 1) % 12);\r\n        setWeeks(groupByWeek(newDates));\r\n    }\r\n\r\n    const goYearForward = () => {\r\n        if (year !== maxYear) {\r\n            setYear(year + 1);\r\n\r\n            const newDates = startedFromSun ? getDates(year + 1, monthIndex) : getDatesFromMon(year + 1, monthIndex);\r\n            setWeeks(groupByWeek(newDates));\r\n        }\r\n\r\n    }\r\n\r\n    const goYearBackward = () => {\r\n        if (year !== minYear) {\r\n            setYear(year - 1);\r\n\r\n            const newDates = startedFromSun ? getDates(year - 1, monthIndex) : getDatesFromMon(year - 1, monthIndex);\r\n            setWeeks(groupByWeek(newDates));\r\n        }\r\n\r\n    }\r\n\r\n    const [monthIndex, setMonthIndex] = useState(new Date().getMonth());\r\n    const [year, setYear] = useState(new Date().getFullYear());\r\n    const [selectedDate, setSelectedDate] = useState(new Date(1000, 11, 21));\r\n    const [dates] = useState(startedFromSun ? getDates(year, monthIndex) : getDatesFromMon(year, monthIndex));\r\n    const [weeks, setWeeks] = useState(groupByWeek(dates));\r\n\r\n    const styles = {\r\n        calendarContainer: {\r\n            minWidth: props.minWidth,\r\n            maxWidth: props.maxWidth,\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <div className={classnames(\"calendar-container\", !isOpen ? \"calendar-container-disable\" : \"\")} style={styles.calendarContainer}>\r\n            <div className=\"upbar\">\r\n                <div className=\"date\">\r\n                    <p className=\"start\">{formatedSelectedDate()}</p>\r\n                </div>\r\n                <div className=\"close\">\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={props.onClose}></i>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"calendar-up-row\">\r\n                    <div className=\"left\">\r\n                        <i className=\"fa fa-angle-double-left year-back\" aria-hidden=\"true\" onClick={goYearBackward}></i>\r\n                        <i className=\"fa fa-angle-left\" aria-hidden=\"true\" onClick={goMonthBackward}></i>\r\n                    </div>\r\n                    <span className=\"month\">{months[monthIndex]}</span>\r\n                    <div className=\"right\">\r\n                        <i className=\"fa fa-angle-right\" aria-hidden=\"true\" onClick={goMonthForward}></i>\r\n                        <i className=\"fa fa-angle-double-right year-forward\" aria-hidden=\"true\" onClick={goYearForward}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weekdays\">\r\n                    <span id=\"mon\" className=\"weekday\">Пн</span>\r\n                    <span id=\"tue\" className=\"weekday\">Вт</span>\r\n                    <span id=\"wed\" className=\"weekday\">Ср</span>\r\n                    <span id=\"thr\" className=\"weekday\">Чт</span>\r\n                    <span id=\"fri\" className=\"weekday\">Пт</span>\r\n                    <span id=\"sat\" className=\"weekday\">Сб</span>\r\n                    <span id=\"sun\" className=\"weekday\">Вс</span>\r\n                </div>\r\n                <div className=\"days\">\r\n                    {\r\n                        weeks.map((week, i) => {\r\n                            return <div className=\"week\" key={i}>\r\n                                {\r\n                                    week.map(day => {\r\n                                        const classes = classnames(\r\n                                            \"day\",\r\n                                            day.disable ? \"disable-day\" : \"\",\r\n                                            compareDates(day.date, new Date()) ? \"today\" : '',\r\n                                            compareDates(day.date, selectedDate) ? \"selected\" : '',\r\n                                        );\r\n                                        return <span\r\n                                            key={day.date.toString()}\r\n                                            onClick={() => setSelectedDate(day.date)}\r\n                                            className={classes}\r\n                                            id={day.date.getDate().toString()}>\r\n                                            {day.date.getDate()}\r\n                                        </span>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button className=\"clear\" onClick={() => {\r\n                        const today = new Date();\r\n                        setMonthIndex(today.getMonth());\r\n                        const newDates = startedFromSun ? getDates(today.getFullYear(), today.getMonth()) : getDatesFromMon(today.getFullYear(), today.getMonth());\r\n                        setWeeks(groupByWeek(newDates));\r\n                        setSelectedDate(new Date(1000, 11, 21));\r\n                    }}>{clearMessage}</button>\r\n                    <button className=\"confirm\" onClick={() => onSave(selectedDate)}>{confirmMessage}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport styled from \"styled-components\";\r\nimport MediaQuery from 'react-responsive';\r\n\r\n// Store\r\nimport signupUIStore from \"../../stores/signupUI\";\r\n\r\n// Components\r\nimport Container from \"../../components/container\";\r\nimport Title from \"../../components/title\";\r\nimport SizedBox from \"../../../../components/sized-box\";\r\nimport SubTitle from \"../../components/subtitle\";\r\nimport TextField from \"../../../../components/text-field\";\r\nimport ConfirmButton from \"../../../../components/confirm-button\";\r\nimport SignupLink from \"../../components/signup-link\";\r\nimport Divider from \"../../components/divider\";\r\nimport DateTextField from \"../../components/year-date-textfield\";\r\nimport Calendar from \"../../../../components/calendar\";\r\n\r\n\r\n\r\nconst Page2 = styled.div`\r\n    position:absolute;\r\n    top: 0px;\r\n    left: 100vw;\r\n    transition: 1s;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        left: 100vw;\r\n    }\r\n`\r\n\r\nconst Form = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 424px) {\r\n        flex-direction: column;\r\n    } \r\n`;\r\n\r\nconst FormColumn = styled.div`\r\n    width: calc(50% - 30px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: start;\r\n\r\n    /* Desktop */\r\n    @media screen and (min-width: 1025px) {\r\n        max-width: 300px;\r\n    }\r\n\r\n    /* Tablet */\r\n    @media screen and (min-width: 424px) and (max-width: 1025px) {\r\n        width: 40vw;\r\n        align-items: start;\r\n    }\r\n\r\n    /* Phone */\r\n    @media screen and (max-width: 424px) {\r\n        width: 100%;\r\n    } \r\n`;\r\n\r\n\r\nconst CalendarWrapper = styled.div`\r\n    position: absolute;\r\n    bottom: calc(50vh - 150px);\r\n    left: 50px;\r\n\r\n    /* Tablet */\r\n    @media screen and (max-width: 424px) {\r\n        left: 15px;\r\n        right: 15px;\r\n    }\r\n`;\r\n\r\n\r\nconst HalfOfWidth = styled.div`\r\n    width: 50%;\r\n\r\n    /* Phone */\r\n    @media screen and (max-width: 424px) {\r\n        width: 100%;\r\n        margin-bottom: 10px;\r\n    } \r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    /** Phone */\r\n    @media screen and (max-width: 426px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst DSPage2: React.FC = () => {\r\n    return <Page2 className={signupUIStore.pageIndex === 0 ? \"\" : signupUIStore.pageIndex === 1 ? \"minus55\" : \"minus110\"}>\r\n\r\n        <Container >\r\n            <Title text=\"Стать врачём\" />\r\n            <SizedBox height=\"10px\" />\r\n            <SubTitle>Чтобы допустить вас на платформу нам необходимы данные о вашем медицинском образовании</SubTitle>\r\n            <SizedBox height=\"10px\" />\r\n            <TextField\r\n                error={signupUIStore.instituteError}\r\n                onChange={signupUIStore.setInstitute}\r\n                value={signupUIStore.institute}\r\n                validator={() => { }}\r\n                field={\"Образование\"}\r\n                hint={\"Медицинский колледж №1 г. Москва\"}\r\n                type={\"text\"}\r\n            />\r\n\r\n            <Form>\r\n                <FormColumn>\r\n                    <TextField\r\n                        error={signupUIStore.specialityError}\r\n                        onChange={signupUIStore.setSpeciality}\r\n                        value={signupUIStore.speciality}\r\n                        validator={() => { }}\r\n                        field={\"Специальность\"}\r\n                        hint={\"Терапевт\"}\r\n                        type={\"text\"}\r\n                    />\r\n                </FormColumn>\r\n                <FormColumn>\r\n                    <TextField\r\n                        error={signupUIStore.studyYearsError}\r\n                        onChange={signupUIStore.setStudyYears}\r\n                        value={signupUIStore.studyYears}\r\n                        validator={() => { }}\r\n                        field={\"Годы обучения\"}\r\n                        hint=\"2015 - 2020\"\r\n                        type={\"text\"}\r\n                    />\r\n                </FormColumn>\r\n            </Form>\r\n\r\n\r\n            <Divider text=\"Диплом\" />\r\n\r\n            <Form>\r\n                <FormColumn>\r\n                    <TextField\r\n                        error={signupUIStore.blankSeriesError}\r\n                        onChange={signupUIStore.setBlankSeries}\r\n                        value={signupUIStore.blankSeries}\r\n                        validator={() => { }}\r\n                        field={\"Серия бланка\"}\r\n                        hint={\"107777\"}\r\n                        type={\"text\"}\r\n                    />\r\n                    <CalendarWrapper style={{ zIndex: signupUIStore.isCalendarExist ? 1 : -100 }}>\r\n                        <Calendar\r\n                            onSave={signupUIStore.onCalendarDateSelected}\r\n                            isOpen={signupUIStore.isCalendarOpen}\r\n                            onClose={signupUIStore.onCalendarClose}\r\n                        />\r\n                    </CalendarWrapper>\r\n\r\n                    <DateTextField\r\n                        error={signupUIStore.issueDateError}\r\n                        onChange={(val: string) => { }}\r\n                        value={signupUIStore.issueDate}\r\n                        field={\"Дата выдачи\"}\r\n                        hint={\"21 / 11 / 2019\"}\r\n                        onFocus={signupUIStore.onCalendarOpen}\r\n                    />\r\n\r\n\r\n                </FormColumn>\r\n                <FormColumn>\r\n                    <TextField\r\n                        error={signupUIStore.blankNumberError}\r\n                        onChange={signupUIStore.setBlankNumber}\r\n                        value={signupUIStore.blankNumber}\r\n                        validator={() => { }}\r\n                        field={\"Номер бланка\"}\r\n                        hint={\"0253595\"}\r\n                        type={\"text\"}\r\n                    />\r\n                </FormColumn>\r\n            </Form>\r\n\r\n            <MediaQuery minDeviceWidth=\"424px\" >\r\n                <SizedBox height=\"20px\" />\r\n            </MediaQuery>\r\n            <MediaQuery maxDeviceWidth=\"424px\" >\r\n                <SizedBox height=\"10px\" />\r\n            </MediaQuery>\r\n\r\n\r\n\r\n            <Row>\r\n                <HalfOfWidth>\r\n                    <ConfirmButton content=\"Продолжить\" onConfirm={signupUIStore.goNextPage} />\r\n                </HalfOfWidth>\r\n                <SignupLink>\r\n                    <span onClick={signupUIStore.goBeforePage}>Вернуться назад</span>\r\n                </SignupLink>\r\n            </Row>\r\n        </Container>\r\n    </Page2>\r\n}\r\n\r\nexport default observer(DSPage2);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n    text: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Line = styled.div`\r\n    height: 1px;\r\n    width: 100%;\r\n    background: #ccc;\r\n    border-radius: 0.5px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    padding-right: 10px;\r\n    color: #282828;\r\n    font-size: 16px;\r\n    white-space: nowrap; \r\n`;\r\n\r\nconst Divider: React.FC<Props> = (props: Props) => {\r\n    return <Container>\r\n        <Text>{props.text}</Text>\r\n        <Line />\r\n    </Container>\r\n}\r\n\r\nexport default Divider;\r\n"],"sourceRoot":""}