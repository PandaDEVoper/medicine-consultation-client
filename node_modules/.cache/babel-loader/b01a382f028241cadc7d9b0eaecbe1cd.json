{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport { observable, action } from \"mobx\";\nlet LoginUIStore = (_class = (_temp = class LoginUIStore {\n  constructor() {\n    _initializerDefineProperty(this, \"email\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"password\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"showPassword\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"error\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"setEmail\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"setPassword\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"setError\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"toggleShowPassword\", _descriptor8, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"email\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"password\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"showPassword\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"error\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"setEmail\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => this.email = val;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"setPassword\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => this.password = val;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"setError\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => this.error = val;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"toggleShowPassword\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => this.showPassword = !this.showPassword;\n  }\n})), _class);\nexport default new LoginUIStore();","map":{"version":3,"sources":["C:/react/medicine-consultation/client/src/modules/auth/stores/loginUI.ts"],"names":["observable","action","LoginUIStore","val","email","password","error","showPassword"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEMC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,C,+EAEdF,U;;;;;WAA2B,E;;4EAC3BA,U;;;;;WAA8B,E;;gFAC9BA,U;;;;;WAAmC,K;;yEACnCA,U;;;;;4EAGAC,M;;;;;WAAmBE,GAAD,IAAkB,KAAKC,KAAL,GAAaD,G;;+EACjDF,M;;;;;WAAsBE,GAAD,IAAkB,KAAKE,QAAL,GAAgBF,G;;4EACvDF,M;;;;;WAAmBE,GAAD,IAAmB,KAAKG,KAAL,GAAaH,G;;sFAClDF,M;;;;;WAA4B,MAAO,KAAKM,YAAL,GAAoB,CAAC,KAAKA,Y;;;AAGlE,eAAe,IAAIL,YAAJ,EAAf","sourcesContent":["import { observable, action } from \"mobx\";\r\n\r\nclass LoginUIStore {\r\n    // Observables\r\n    @observable email: string = \"\";\r\n    @observable password: string = \"\";\r\n    @observable showPassword: boolean = false;\r\n    @observable error?: string;\r\n\r\n    // Setters\r\n    @action setEmail = (val: string) => (this.email = val);\r\n    @action setPassword = (val: string) => (this.password = val);\r\n    @action setError = (val?: string) => (this.error = val);\r\n    @action toggleShowPassword = () => (this.showPassword = !this.showPassword);\r\n}\r\n\r\nexport default new LoginUIStore();\r\n"]},"metadata":{},"sourceType":"module"}