{"ast":null,"code":"import _initializerDefineProperty from \"c:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"c:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"c:\\\\react\\\\medicine-consultation\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _temp;\n\nimport { observable, action } from \"mobx\";\nimport axios from \"axios\";\nimport adminServices from \"../../store\";\nlet Requests = (_class = (_temp = class Requests {\n  constructor() {\n    _initializerDefineProperty(this, \"isRequestOpen\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isRequestBookes\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"requests\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"isListView\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"isCloseModalWindowOpen\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"isSubmitModalWindowOpen\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"userDataOnModalWindow\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"requestOperationError\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"triggerRequestOpenOrClose\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"triggerBookRequest\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"setIsListView\", _descriptor11, this);\n\n    this.updateTokens = async after => {\n      // Trying to get new accessToken\n      const {\n        success,\n        tokens\n      } = await axios.post(process.env.REACT_APP_SERVER_URL + \"/api/admin/token/update-tokens\", {\n        adminId: localStorage.getItem(\"adminid\"),\n        accessToken: localStorage.getItem(\"adminAccessToken\"),\n        refreshToken: localStorage.getItem(\"adminRefreshToken\")\n      }).then(data => data.data).catch(e => e.response.data);\n\n      if (!success) {\n        console.log(\"Error while updating tokens\");\n        adminServices.logout();\n        return;\n      }\n\n      localStorage.setItem(\"adminAccessToken\", tokens.access);\n      localStorage.setItem(\"adminRefreshToken\", tokens.refresh);\n      await after();\n    };\n\n    _initializerDefineProperty(this, \"fetchRequests\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"openModalWndow\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"undoModalWindow\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"removeRequest\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"submitRequest\", _descriptor16, this);\n\n    this.fetchRequests();\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isRequestOpen\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isRequestBookes\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"requests\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isListView\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"isCloseModalWindowOpen\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"isSubmitModalWindowOpen\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"userDataOnModalWindow\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"requestOperationError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"triggerRequestOpenOrClose\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return i => {\n      this.isRequestOpen[i] = !this.isRequestOpen[i];\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"triggerBookRequest\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return i => {\n      this.isRequestBookes[i] = !this.isRequestBookes[i];\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"setIsListView\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => this.isListView = val;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"fetchRequests\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const makeRequest = async () => {\n        return await axios.get(process.env.REACT_APP_SERVER_URL + \"/api/admin/become-doctor-requests\", {\n          headers: {\n            auth: \"Bearer \" + localStorage.getItem(\"adminAccessToken\")\n          }\n        }).then(data => data.data).catch(e => e.response.data);\n      };\n\n      const response = await makeRequest();\n\n      if (!response.success) {\n        if (response.error === \"not_authorize\") {\n          await this.updateTokens(async () => {\n            const response = await makeRequest();\n            console.log(\"Update tokens\", response);\n\n            if (response.success) {\n              this.requests = response.requests; // adminServices.redirect(\"/admin\");\n            } else {\n              adminServices.logout();\n            }\n          });\n        } else {\n          adminServices.logout();\n        }\n      } else {\n        this.requests = response.requests;\n      }\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"openModalWndow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      this.isCloseModalWindowOpen = true;\n      this.userDataOnModalWindow = { ...data\n      };\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"undoModalWindow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.isCloseModalWindowOpen = false;\n      this.isSubmitModalWindowOpen = false;\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"removeRequest\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.isCloseModalWindowOpen = false;\n      this.requests = this.requests.filter(e => e.id != this.userDataOnModalWindow.id);\n      const errorText = \"Произошла какая-то ошибка. Повторите позднее\";\n\n      const makeRequest = async () => {\n        return await axios.delete(process.env.REACT_APP_SERVER_URL + \"/api/admin/become-doctor-request/remove/\" + this.userDataOnModalWindow.id, {\n          headers: {\n            auth: \"Bearer \" + localStorage.getItem(\"adminAccessToken\")\n          }\n        }).then(data => {\n          var _data$data$ok;\n\n          return (_data$data$ok = data.data.ok) !== null && _data$data$ok !== void 0 ? _data$data$ok : false;\n        }).catch(e => e.response.data.ok);\n      };\n\n      const ok = await makeRequest();\n\n      if (!ok) {\n        await this.updateTokens(async () => {\n          const ok = await makeRequest();\n\n          if (!ok) {\n            this.requestOperationError = errorText;\n          }\n        });\n      }\n    };\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"submitRequest\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.isCloseModalWindowOpen = false;\n      this.requests = this.requests.filter(e => e.id != this.userDataOnModalWindow.id);\n\n      const makeRequest = async () => {\n        return await axios.post(process.env.REACT_APP_SERVER_URL + \"/api/admin/become-doctor-request/submit/\" + this.userDataOnModalWindow.id, {}, {\n          headers: {\n            auth: \"Bearer \" + localStorage.getItem(\"adminAccessToken\")\n          }\n        }).then(data => {\n          var _data$data$ok2;\n\n          return (_data$data$ok2 = data.data.ok) !== null && _data$data$ok2 !== void 0 ? _data$data$ok2 : false;\n        }).catch(e => e.response.data.ok);\n      };\n\n      const errorText = \"Произошла какая-то ошибка. Повторите позднее\";\n      const ok = await makeRequest();\n\n      if (!ok) {\n        await this.updateTokens(async () => {\n          const ok = await makeRequest();\n          this.isSubmitModalWindowOpen = false;\n\n          if (!ok) {\n            this.requestOperationError = errorText;\n          }\n        });\n      }\n    };\n  }\n})), _class);\nexport default new Requests();","map":{"version":3,"sources":["c:/react/medicine-consultation/client/src/modules/admin/modules/Requests/store.ts"],"names":["observable","action","axios","adminServices","Requests","constructor","updateTokens","after","success","tokens","post","process","env","REACT_APP_SERVER_URL","adminId","localStorage","getItem","accessToken","refreshToken","then","data","catch","e","response","console","log","logout","setItem","access","refresh","fetchRequests","i","isRequestOpen","isRequestBookes","val","isListView","makeRequest","get","headers","auth","error","requests","isCloseModalWindowOpen","userDataOnModalWindow","isSubmitModalWindowOpen","filter","id","errorText","delete","ok","requestOperationError"],"mappings":"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","sourcesContent":["import { observable, action } from \"mobx\";\r\nimport axios from \"axios\";\r\nimport adminServices from \"../../store\";\r\n\r\nclass Requests {\r\n    constructor() {\r\n        this.fetchRequests();\r\n    }\r\n\r\n    @observable isRequestOpen: boolean[] = [];\r\n    @observable isRequestBookes: boolean[] = [];\r\n    @observable requests: IBecomeDoctor[] = [];\r\n    @observable isListView: boolean = false;\r\n\r\n    @observable isCloseModalWindowOpen: boolean = false;\r\n    @observable isSubmitModalWindowOpen: boolean = false;\r\n    @observable userDataOnModalWindow: { name?: string; id?: string } = {};\r\n    @observable requestOperationError: string | null = null;\r\n\r\n    @action triggerRequestOpenOrClose = (i: number) => {\r\n        this.isRequestOpen[i] = !this.isRequestOpen[i];\r\n    };\r\n\r\n    @action triggerBookRequest = (i: number) => {\r\n        this.isRequestBookes[i] = !this.isRequestBookes[i];\r\n    };\r\n\r\n    @action setIsListView = (val: boolean) => (this.isListView = val);\r\n\r\n    private updateTokens = async (after: Function): Promise<any> => {\r\n        // Trying to get new accessToken\r\n        const { success, tokens } = await axios\r\n            .post(\r\n                process.env.REACT_APP_SERVER_URL +\r\n                    \"/api/admin/token/update-tokens\",\r\n                {\r\n                    adminId: localStorage.getItem(\"adminid\"),\r\n                    accessToken: localStorage.getItem(\"adminAccessToken\"),\r\n                    refreshToken: localStorage.getItem(\"adminRefreshToken\"),\r\n                }\r\n            )\r\n            .then((data) => data.data)\r\n            .catch((e) => e.response.data);\r\n\r\n        if (!success) {\r\n            console.log(\"Error while updating tokens\");\r\n            adminServices.logout();\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem(\"adminAccessToken\", tokens.access);\r\n        localStorage.setItem(\"adminRefreshToken\", tokens.refresh);\r\n\r\n        await after();\r\n    };\r\n\r\n    @action fetchRequests = async () => {\r\n        const makeRequest = async () => {\r\n            return await axios\r\n                .get(\r\n                    process.env.REACT_APP_SERVER_URL +\r\n                        \"/api/admin/become-doctor-requests\",\r\n                    {\r\n                        headers: {\r\n                            auth:\r\n                                \"Bearer \" +\r\n                                localStorage.getItem(\"adminAccessToken\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((data) => data.data)\r\n                .catch((e) => e.response.data);\r\n        };\r\n\r\n        const response = await makeRequest();\r\n\r\n        if (!response.success) {\r\n            if (response.error === \"not_authorize\") {\r\n                await this.updateTokens(async () => {\r\n                    const response = await makeRequest();\r\n\r\n                    console.log(\"Update tokens\", response);\r\n\r\n                    if (response.success) {\r\n                        this.requests = response.requests;\r\n                        // adminServices.redirect(\"/admin\");\r\n                    } else {\r\n                        adminServices.logout();\r\n                    }\r\n                });\r\n            } else {\r\n                adminServices.logout();\r\n            }\r\n        } else {\r\n            this.requests = response.requests;\r\n        }\r\n    };\r\n\r\n    @action openModalWndow = (data: { name: string; id: string }) => {\r\n        this.isCloseModalWindowOpen = true;\r\n        this.userDataOnModalWindow = { ...data };\r\n    };\r\n\r\n    @action undoModalWindow = () => {\r\n        this.isCloseModalWindowOpen = false;\r\n        this.isSubmitModalWindowOpen = false;\r\n    };\r\n    @action removeRequest = async () => {\r\n        this.isCloseModalWindowOpen = false;\r\n        this.requests = this.requests.filter(\r\n            (e) => e.id != this.userDataOnModalWindow.id\r\n        );\r\n\r\n        const errorText = \"Произошла какая-то ошибка. Повторите позднее\";\r\n\r\n        const makeRequest = async (): Promise<boolean> => {\r\n            return await axios\r\n                .delete(\r\n                    process.env.REACT_APP_SERVER_URL +\r\n                        \"/api/admin/become-doctor-request/remove/\" +\r\n                        this.userDataOnModalWindow.id,\r\n                    {\r\n                        headers: {\r\n                            auth:\r\n                                \"Bearer \" +\r\n                                localStorage.getItem(\"adminAccessToken\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((data) => data.data.ok ?? false)\r\n                .catch((e) => e.response.data.ok);\r\n        };\r\n\r\n        const ok = await makeRequest();\r\n\r\n        if (!ok) {\r\n            await this.updateTokens(async () => {\r\n                const ok = await makeRequest();\r\n\r\n                if (!ok) {\r\n                    this.requestOperationError = errorText;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    @action submitRequest = async () => {\r\n        this.isCloseModalWindowOpen = false;\r\n        this.requests = this.requests.filter(\r\n            (e) => e.id != this.userDataOnModalWindow.id\r\n        );\r\n\r\n        const makeRequest = async (): Promise<boolean> => {\r\n            return await axios\r\n                .post(\r\n                    process.env.REACT_APP_SERVER_URL +\r\n                        \"/api/admin/become-doctor-request/submit/\" +\r\n                        this.userDataOnModalWindow.id,\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            auth:\r\n                                \"Bearer \" +\r\n                                localStorage.getItem(\"adminAccessToken\"),\r\n                        },\r\n                    }\r\n                )\r\n                .then((data) => data.data.ok ?? false)\r\n                .catch((e) => e.response.data.ok);\r\n        };\r\n\r\n        const errorText = \"Произошла какая-то ошибка. Повторите позднее\";\r\n\r\n        const ok = await makeRequest();\r\n\r\n        if (!ok) {\r\n            await this.updateTokens(async () => {\r\n                const ok = await makeRequest();\r\n\r\n                this.isSubmitModalWindowOpen = false;\r\n\r\n                if (!ok) {\r\n                    this.requestOperationError = errorText;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport default new Requests();\r\n"]},"metadata":{},"sourceType":"module"}