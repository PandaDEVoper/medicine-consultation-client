{"ast":null,"code":"var _jsxFileName = \"c:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\modules\\\\doctors\\\\components\\\\doctors-wrapper.tsx\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport Doctor from \"./doctor\";\nimport controller from \"../controllers/find-doctor-controller\";\nimport { InlineLoadingIndicator } from \"../../../components/loading-indicator\";\n\nconst DoctorsWrapper = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctors-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctors-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, controller.isLoading ? [...Array(9)].map(() => /*#__PURE__*/React.createElement(Doctor, {\n    id: \"\",\n    name: \"\",\n    surname: \"\",\n    imgUrl: \"\",\n    rating: 0,\n    age: 0,\n    speciality: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 47\n    }\n  })) : controller.doctors.map(e => {\n    var _e$id, _e$name, _e$surname, _e$photoUrl;\n\n    return /*#__PURE__*/React.createElement(Doctor, {\n      id: (_e$id = e.id) !== null && _e$id !== void 0 ? _e$id : \"\",\n      name: (_e$name = e.name) !== null && _e$name !== void 0 ? _e$name : \"\",\n      surname: (_e$surname = e.surname) !== null && _e$surname !== void 0 ? _e$surname : \"\",\n      imgUrl: (_e$photoUrl = e.photoUrl) !== null && _e$photoUrl !== void 0 ? _e$photoUrl : \"\",\n      rating: e.rating,\n      age: e.age,\n      speciality: e.speciality[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 53\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `infinity-scroll-loading-indicator ${controller.isInfinyLoading ? \"\" : \"close\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InlineLoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default observer(DoctorsWrapper);","map":{"version":3,"sources":["c:/react/medicine-consultation/client/src/modules/doctors/components/doctors-wrapper.tsx"],"names":["React","observer","Doctor","controller","InlineLoadingIndicator","DoctorsWrapper","isLoading","Array","map","doctors","e","id","name","surname","photoUrl","rating","age","speciality","isInfinyLoading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,sBAAT,QAAuC,uCAAvC;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACnC,sBAAO;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,UAAU,CAACG,SAAX,GACM,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,mBAAM,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,EAAX;AAAc,IAAA,IAAI,EAAC,EAAnB;AAAsB,IAAA,OAAO,EAAC,EAA9B;AAAiC,IAAA,MAAM,EAAC,EAAxC;AAA2C,IAAA,MAAM,EAAE,CAAnD;AAAsD,IAAA,GAAG,EAAE,CAA3D;AAA8D,IAAA,UAAU,EAAC,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADN,GAEML,UAAU,CAACM,OAAX,CAAmBD,GAAnB,CAAwBE,CAAD;AAAA;;AAAA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,EAAE,WAAEA,CAAC,CAACC,EAAJ,yCAAU,EAApB;AAAwB,MAAA,IAAI,aAAED,CAAC,CAACE,IAAJ,6CAAY,EAAxC;AAA4C,MAAA,OAAO,gBAAEF,CAAC,CAACG,OAAJ,mDAAe,EAAlE;AAAsE,MAAA,MAAM,iBAAEH,CAAC,CAACI,QAAJ,qDAAgB,EAA5F;AAAgG,MAAA,MAAM,EAAEJ,CAAC,CAACK,MAA1G;AAAkH,MAAA,GAAG,EAAEL,CAAC,CAACM,GAAzH;AAA8H,MAAA,UAAU,EAAEN,CAAC,CAACO,UAAF,CAAa,CAAb,CAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAA,GAAvB,CAJd,CADG,eAQH;AAAK,IAAA,SAAS,EAAG,qCAAoCd,UAAU,CAACe,eAAX,GAA6B,EAA7B,GAAkC,OAAQ,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARG,CAAP;AAYH,CAbD;;AAeA,eAAejB,QAAQ,CAACI,cAAD,CAAvB","sourcesContent":["import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport Doctor from \"./doctor\";\r\nimport controller from \"../controllers/find-doctor-controller\";\r\nimport { InlineLoadingIndicator } from \"../../../components/loading-indicator\";\r\n\r\nconst DoctorsWrapper: React.FC = () => {\r\n    return <div className=\"doctors-container\">\r\n        <div className=\"doctors-grid\">\r\n            {\r\n                controller.isLoading\r\n                    ? [...Array(9)].map(() => <Doctor id=\"\" name=\"\" surname=\"\" imgUrl=\"\" rating={0} age={0} speciality=\"\" />)\r\n                    : controller.doctors.map((e) => <Doctor id={e.id ?? \"\"} name={e.name ?? \"\"} surname={e.surname ?? \"\"} imgUrl={e.photoUrl ?? \"\"} rating={e.rating} age={e.age} speciality={e.speciality[0]} />)\r\n            }\r\n        </div>\r\n        <div className={`infinity-scroll-loading-indicator ${controller.isInfinyLoading ? \"\" : \"close\"}`}>\r\n            <InlineLoadingIndicator />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default observer(DoctorsWrapper);"]},"metadata":{},"sourceType":"module"}