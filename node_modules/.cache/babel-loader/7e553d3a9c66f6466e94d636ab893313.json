{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\components\\\\calendar.tsx\";\nimport React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport \"./styles/calendar.css\";\n\nconst Calendar = props => {\n  var _props$weekdays, _props$startedFromSun, _props$months, _props$isOpen, _props$minYear, _props$minYear2, _props$confirmMessage, _props$clearMessage, _props$onSave;\n\n  // Props\n  const weekdays = (_props$weekdays = props.weekdays) !== null && _props$weekdays !== void 0 ? _props$weekdays : [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n  const startedFromSun = (_props$startedFromSun = props.startedFromSun) !== null && _props$startedFromSun !== void 0 ? _props$startedFromSun : false;\n  const months = (_props$months = props.months) !== null && _props$months !== void 0 ? _props$months : [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n  const isOpen = (_props$isOpen = props.isOpen) !== null && _props$isOpen !== void 0 ? _props$isOpen : true;\n  const minYear = (_props$minYear = props.minYear) !== null && _props$minYear !== void 0 ? _props$minYear : 1500;\n  const maxYear = (_props$minYear2 = props.minYear) !== null && _props$minYear2 !== void 0 ? _props$minYear2 : 3000;\n  const confirmMessage = (_props$confirmMessage = props.confirmMessage) !== null && _props$confirmMessage !== void 0 ? _props$confirmMessage : \"Выбрать\";\n  const clearMessage = (_props$clearMessage = props.clearMessage) !== null && _props$clearMessage !== void 0 ? _props$clearMessage : \"Очистить\";\n  const onSave = (_props$onSave = props.onSave) !== null && _props$onSave !== void 0 ? _props$onSave : function () {};\n\n  const getDates = (year, month) => {\n    let dates = [];\n    const firstDay = new Date(year, month, 1); // Before\n\n    const need = firstDay.getDay();\n    const dayInLastMonth = new Date(year, month, 0).getDate();\n\n    for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\n      const date = new Date(year, month - 1, i);\n      const obj = {\n        date: date,\n        disable: true,\n        weekday: weekdays[date.getDay()]\n      };\n      dates.push(obj);\n    } // This month\n\n\n    const dayAmount = new Date(year, month + 1, 0).getDate();\n\n    for (let i = 1; i <= dayAmount; i++) {\n      const date = new Date(year, month, i);\n      const obj = {\n        date: date,\n        disable: false,\n        weekday: weekdays[date.getDay()]\n      };\n      dates.push(obj);\n    } // After\n\n\n    const lastDay = dates[dates.length - 1].date;\n\n    if (lastDay.getDay() !== 6) {\n      const need2 = 6 - lastDay.getDay();\n\n      for (let i = 1; i <= need2; i++) {\n        const date = new Date(year, month + 1, i);\n        const obj = {\n          date: date,\n          disable: true,\n          weekday: weekdays[date.getDay()]\n        };\n        dates.push(obj);\n      }\n    }\n\n    return dates;\n  };\n\n  const compareDates = (date1, date2) => {\n    if (!date2) return false;\n\n    if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const formatedSelectedDate = () => {\n    let date = selectedDate;\n\n    if (selectedDate.getFullYear() === 1000) {\n      date = new Date();\n    }\n\n    let day = date.getDate().toString();\n    let month = (date.getMonth() + 1).toString();\n\n    if (day.length === 1) {\n      day = \"0\" + day;\n    }\n\n    if (month.length === 1) {\n      month = \"0\" + month;\n    }\n\n    return `${day} / ${month} / ${date.getFullYear()}`;\n  };\n\n  const getDatesFromMon = (year, month) => {\n    let newDates = getDates(year, month);\n    const firstEnable = newDates.find(e => !e.disable);\n\n    if ((firstEnable === null || firstEnable === void 0 ? void 0 : firstEnable.date.getDay()) !== 0) {\n      newDates.shift();\n    } else {\n      let beforeDates = [];\n      const need = 6;\n      const dayInLastMonth = new Date(year, month, 0).getDate();\n\n      for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\n        const date = new Date(year, month - 1, i);\n        const obj = {\n          date: date,\n          disable: true,\n          weekday: weekdays[date.getDay()]\n        };\n        beforeDates.push(obj);\n      }\n\n      newDates = beforeDates.concat(newDates);\n    }\n\n    const last = new Date(newDates[newDates.length - 1].date);\n    let newLast;\n\n    if (newDates[newDates.length - 1].disable) {\n      newLast = new Date(last.getFullYear(), last.getMonth(), last.getDate() + 1);\n    } else {\n      newLast = new Date(last.getFullYear(), last.getMonth() + 1, last.getDate() + 1);\n    }\n\n    newDates.push({\n      date: newLast,\n      disable: true,\n      weekday: weekdays[newLast.getDay()]\n    });\n    const firstNextDisabled = newDates.slice(7).findIndex(e => e.disable);\n\n    if (firstNextDisabled + 14 === newDates.length) {\n      newDates = newDates.slice(0, firstNextDisabled + 7);\n    }\n\n    return newDates;\n  };\n\n  const groupByWeek = thisDates => {\n    const countWeeks = Math.ceil(thisDates.length / 7);\n    let weeks = [];\n\n    for (let i = 0; i < countWeeks; i++) {\n      weeks.push(thisDates.slice(i * 7, (i + 1) * 7));\n    }\n\n    return weeks;\n  };\n\n  const goMonthForward = () => {\n    if (monthIndex + 1 === 12) {\n      setYear(year + 1);\n    }\n\n    setMonthIndex((monthIndex + 1) % 12);\n    const newDates = startedFromSun ? getDates(year, (monthIndex + 1) % 12) : getDatesFromMon(year, (monthIndex + 1) % 12);\n    setWeeks(groupByWeek(newDates));\n  };\n\n  const goMonthBackward = () => {\n    if (monthIndex === 0) {\n      setYear(year - 1);\n    }\n\n    if (monthIndex === 0) {\n      setMonthIndex(11);\n    } else {\n      setMonthIndex(monthIndex - 1);\n    }\n\n    const newDates = startedFromSun ? getDates(year, Math.abs(monthIndex - 1) % 12) : getDatesFromMon(year, (monthIndex - 1) % 12);\n    setWeeks(groupByWeek(newDates));\n  };\n\n  const goYearForward = () => {\n    if (year !== maxYear) {\n      setYear(year + 1);\n      const newDates = startedFromSun ? getDates(year + 1, monthIndex) : getDatesFromMon(year + 1, monthIndex);\n      setWeeks(groupByWeek(newDates));\n    }\n  };\n\n  const goYearBackward = () => {\n    if (year !== minYear) {\n      setYear(year - 1);\n      const newDates = startedFromSun ? getDates(year - 1, monthIndex) : getDatesFromMon(year - 1, monthIndex);\n      setWeeks(groupByWeek(newDates));\n    }\n  };\n\n  const [monthIndex, setMonthIndex] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [selectedDate, setSelectedDate] = useState(new Date(1000, 11, 21));\n  const [dates] = useState(startedFromSun ? getDates(year, monthIndex) : getDatesFromMon(year, monthIndex));\n  const [weeks, setWeeks] = useState(groupByWeek(dates));\n  const styles = {\n    calendarContainer: {\n      minWidth: props.minWidth,\n      maxWidth: props.maxWidth\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames(\"calendar-container\", !isOpen ? \"calendar-container-disable\" : \"\"),\n    style: styles.calendarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, formatedSelectedDate())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\",\n    onClick: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-up-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-angle-double-left year-back\",\n    \"aria-hidden\": \"true\",\n    onClick: goYearBackward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-angle-left\",\n    \"aria-hidden\": \"true\",\n    onClick: goMonthBackward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, months[monthIndex]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-angle-right\",\n    \"aria-hidden\": \"true\",\n    onClick: goMonthForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-angle-double-right year-forward\",\n    \"aria-hidden\": \"true\",\n    onClick: goYearForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weekdays\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"mon\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u043D\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"tue\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u0442\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"wed\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u0440\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"thr\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, \"\\u0427\\u0442\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"fri\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u0442\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"sat\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u0431\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"sun\",\n    className: \"weekday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u0441\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"days\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, weeks.map((week, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"week\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 36\n      }\n    }, week.map(day => {\n      const classes = classnames(\"day\", day.disable ? \"disable-day\" : \"\", compareDates(day.date, new Date()) ? \"today\" : '', compareDates(day.date, selectedDate) ? \"selected\" : '');\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: day.date.toString(),\n        onClick: () => setSelectedDate(day.date),\n        className: classes,\n        id: day.date.getDate().toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 48\n        }\n      }, day.date.getDate());\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear\",\n    onClick: () => {\n      const today = new Date();\n      setMonthIndex(today.getMonth());\n      const newDates = startedFromSun ? getDates(today.getFullYear(), today.getMonth()) : getDatesFromMon(today.getFullYear(), today.getMonth());\n      setWeeks(groupByWeek(newDates));\n      setSelectedDate(new Date(1000, 11, 21));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, clearMessage), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm\",\n    onClick: () => onSave(selectedDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, confirmMessage)))));\n};\n\nexport default Calendar;","map":{"version":3,"sources":["C:/react/medicine-consultation/client/src/components/calendar.tsx"],"names":["React","useState","classnames","Calendar","props","weekdays","startedFromSun","months","isOpen","minYear","maxYear","confirmMessage","clearMessage","onSave","getDates","year","month","dates","firstDay","Date","need","getDay","dayInLastMonth","getDate","i","date","obj","disable","weekday","push","dayAmount","lastDay","length","need2","compareDates","date1","date2","getFullYear","getMonth","formatedSelectedDate","selectedDate","day","toString","getDatesFromMon","newDates","firstEnable","find","e","shift","beforeDates","concat","last","newLast","firstNextDisabled","slice","findIndex","groupByWeek","thisDates","countWeeks","Math","ceil","weeks","goMonthForward","monthIndex","setYear","setMonthIndex","setWeeks","goMonthBackward","abs","goYearForward","goYearBackward","setSelectedDate","styles","calendarContainer","minWidth","maxWidth","onClose","map","week","classes","today"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport \"./styles/calendar.css\";\r\n\r\ntype Props = {\r\n    isOpen?: boolean;\r\n    minWidth?: string;\r\n    maxWidth?: string;\r\n    startedFromSun?: boolean;\r\n    months?: string[];\r\n    weekdays?: string[];\r\n    onClose?: () => void;\r\n    minYear?: number;\r\n    maxYear?: number;\r\n    confirmMessage?: string;\r\n    clearMessage?: string;\r\n    onSave?: (date: Date) => void;\r\n};\r\n\r\ntype DateObj = {\r\n    disable: boolean;\r\n    weekday: \"mon\" | \"tue\" | \"wed\" | \"thu\" | \"fri\" | \"sat\" | \"sun\" | string;\r\n    date: Date;\r\n}\r\n\r\n\r\nconst Calendar: React.FC<Props> = (props: Props) => {\r\n\r\n    // Props\r\n    const weekdays = props.weekdays ?? [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n    const startedFromSun = props.startedFromSun ?? false;\r\n    const months = props.months ?? [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\r\n    const isOpen = props.isOpen ?? true;\r\n    const minYear = props.minYear ?? 1500;\r\n    const maxYear = props.minYear ?? 3000;\r\n    const confirmMessage = props.confirmMessage ?? \"Выбрать\";\r\n    const clearMessage = props.clearMessage ?? \"Очистить\";\r\n    const onSave = props.onSave ?? function () { };\r\n\r\n\r\n    const getDates = (year: number, month: number): Array<DateObj> => {\r\n\r\n        let dates: DateObj[] = [];\r\n\r\n        const firstDay = new Date(year, month, 1);\r\n\r\n        // Before\r\n        const need = firstDay.getDay();\r\n        const dayInLastMonth = new Date(year, month, 0).getDate();\r\n        for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\r\n            const date = new Date(year, month - 1, i);\r\n            const obj: DateObj = {\r\n                date: date,\r\n                disable: true,\r\n                weekday: weekdays[date.getDay()],\r\n            }\r\n            dates.push(obj)\r\n        }\r\n\r\n        // This month\r\n        const dayAmount = new Date(year, month + 1, 0).getDate();\r\n        for (let i = 1; i <= dayAmount; i++) {\r\n            const date = new Date(year, month, i);\r\n            const obj: DateObj = {\r\n                date: date,\r\n                disable: false,\r\n                weekday: weekdays[date.getDay()],\r\n            }\r\n            dates.push(obj);\r\n        }\r\n\r\n        // After\r\n        const lastDay = dates[dates.length - 1].date;\r\n        if (lastDay.getDay() !== 6) {\r\n            const need2 = 6 - lastDay.getDay();\r\n            for (let i = 1; i <= need2; i++) {\r\n                const date = new Date(year, month + 1, i);\r\n                const obj: DateObj = {\r\n                    date: date,\r\n                    disable: true,\r\n                    weekday: weekdays[date.getDay()],\r\n                }\r\n                dates.push(obj);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return dates;\r\n    }\r\n\r\n    const compareDates = (date1: Date, date2: Date | null) => {\r\n        if (!date2) return false;\r\n\r\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const formatedSelectedDate = () => {\r\n        let date = selectedDate;\r\n\r\n        if (selectedDate.getFullYear() === 1000) {\r\n            date = new Date();\r\n        }\r\n\r\n        let day = date.getDate().toString();\r\n        let month = (date.getMonth() + 1).toString();\r\n\r\n        if (day.length === 1) {\r\n            day = \"0\" + day;\r\n        }\r\n\r\n        if (month.length === 1) {\r\n            month = \"0\" + month;\r\n        }\r\n\r\n\r\n        return `${day} / ${month} / ${date.getFullYear()}`\r\n    }\r\n\r\n    const getDatesFromMon = (year: number, month: number): Array<DateObj> => {\r\n\r\n        let newDates = getDates(year, month);\r\n        const firstEnable = newDates.find(e => !e.disable);\r\n\r\n        if (firstEnable?.date.getDay() !== 0) {\r\n            newDates.shift();\r\n        } else {\r\n            let beforeDates = [];\r\n            const need = 6;\r\n            const dayInLastMonth = new Date(year, month, 0).getDate();\r\n            for (let i = dayInLastMonth - need + 1; i <= dayInLastMonth; i++) {\r\n                const date = new Date(year, month - 1, i);\r\n                const obj: DateObj = {\r\n                    date: date,\r\n                    disable: true,\r\n                    weekday: weekdays[date.getDay()],\r\n                }\r\n                beforeDates.push(obj);\r\n            }\r\n            newDates = beforeDates.concat(newDates);\r\n        }\r\n\r\n\r\n\r\n\r\n        const last = new Date(newDates[newDates.length - 1].date);\r\n        let newLast;\r\n        if (newDates[newDates.length - 1].disable) {\r\n            newLast = new Date(last.getFullYear(), last.getMonth(), last.getDate() + 1);\r\n        } else {\r\n            newLast = new Date(last.getFullYear(), last.getMonth() + 1, last.getDate() + 1);\r\n        }\r\n\r\n        newDates.push({\r\n            date: newLast,\r\n            disable: true,\r\n            weekday: weekdays[newLast.getDay()],\r\n        });\r\n\r\n\r\n\r\n        const firstNextDisabled = newDates.slice(7).findIndex(e => e.disable);\r\n        if (firstNextDisabled + 14 === newDates.length) {\r\n            newDates = newDates.slice(0, firstNextDisabled + 7);\r\n        }\r\n\r\n\r\n\r\n        return newDates;\r\n\r\n    }\r\n\r\n    const groupByWeek = (thisDates: Array<DateObj>): Array<Array<DateObj>> => {\r\n        const countWeeks = Math.ceil(thisDates.length / 7);\r\n\r\n        let weeks = [];\r\n\r\n        for (let i = 0; i < countWeeks; i++) {\r\n            weeks.push(thisDates.slice(i * 7, (i + 1) * 7))\r\n        }\r\n\r\n\r\n        return weeks;\r\n    }\r\n\r\n    const goMonthForward = () => {\r\n\r\n        if (monthIndex + 1 === 12) {\r\n            setYear(year + 1);\r\n        }\r\n\r\n        setMonthIndex((monthIndex + 1) % 12)\r\n        const newDates = startedFromSun ? getDates(year, (monthIndex + 1) % 12) : getDatesFromMon(year, (monthIndex + 1) % 12);\r\n        setWeeks(groupByWeek(newDates));\r\n    }\r\n\r\n    const goMonthBackward = () => {\r\n        if (monthIndex === 0) {\r\n            setYear(year - 1);\r\n        }\r\n\r\n\r\n        if (monthIndex === 0) {\r\n            setMonthIndex(11)\r\n        } else {\r\n            setMonthIndex(monthIndex - 1)\r\n        }\r\n        const newDates = startedFromSun ? getDates(year, Math.abs(monthIndex - 1) % 12) : getDatesFromMon(year, (monthIndex - 1) % 12);\r\n        setWeeks(groupByWeek(newDates));\r\n    }\r\n\r\n    const goYearForward = () => {\r\n        if (year !== maxYear) {\r\n            setYear(year + 1);\r\n\r\n            const newDates = startedFromSun ? getDates(year + 1, monthIndex) : getDatesFromMon(year + 1, monthIndex);\r\n            setWeeks(groupByWeek(newDates));\r\n        }\r\n\r\n    }\r\n\r\n    const goYearBackward = () => {\r\n        if (year !== minYear) {\r\n            setYear(year - 1);\r\n\r\n            const newDates = startedFromSun ? getDates(year - 1, monthIndex) : getDatesFromMon(year - 1, monthIndex);\r\n            setWeeks(groupByWeek(newDates));\r\n        }\r\n\r\n    }\r\n\r\n    const [monthIndex, setMonthIndex] = useState(new Date().getMonth());\r\n    const [year, setYear] = useState(new Date().getFullYear());\r\n    const [selectedDate, setSelectedDate] = useState(new Date(1000, 11, 21));\r\n    const [dates] = useState(startedFromSun ? getDates(year, monthIndex) : getDatesFromMon(year, monthIndex));\r\n    const [weeks, setWeeks] = useState(groupByWeek(dates));\r\n\r\n    const styles = {\r\n        calendarContainer: {\r\n            minWidth: props.minWidth,\r\n            maxWidth: props.maxWidth,\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <div className={classnames(\"calendar-container\", !isOpen ? \"calendar-container-disable\" : \"\")} style={styles.calendarContainer}>\r\n            <div className=\"upbar\">\r\n                <div className=\"date\">\r\n                    <p className=\"start\">{formatedSelectedDate()}</p>\r\n                </div>\r\n                <div className=\"close\">\r\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={props.onClose}></i>\r\n                </div>\r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"calendar-up-row\">\r\n                    <div className=\"left\">\r\n                        <i className=\"fa fa-angle-double-left year-back\" aria-hidden=\"true\" onClick={goYearBackward}></i>\r\n                        <i className=\"fa fa-angle-left\" aria-hidden=\"true\" onClick={goMonthBackward}></i>\r\n                    </div>\r\n                    <span className=\"month\">{months[monthIndex]}</span>\r\n                    <div className=\"right\">\r\n                        <i className=\"fa fa-angle-right\" aria-hidden=\"true\" onClick={goMonthForward}></i>\r\n                        <i className=\"fa fa-angle-double-right year-forward\" aria-hidden=\"true\" onClick={goYearForward}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weekdays\">\r\n                    <span id=\"mon\" className=\"weekday\">Пн</span>\r\n                    <span id=\"tue\" className=\"weekday\">Вт</span>\r\n                    <span id=\"wed\" className=\"weekday\">Ср</span>\r\n                    <span id=\"thr\" className=\"weekday\">Чт</span>\r\n                    <span id=\"fri\" className=\"weekday\">Пт</span>\r\n                    <span id=\"sat\" className=\"weekday\">Сб</span>\r\n                    <span id=\"sun\" className=\"weekday\">Вс</span>\r\n                </div>\r\n                <div className=\"days\">\r\n                    {\r\n                        weeks.map((week, i) => {\r\n                            return <div className=\"week\" key={i}>\r\n                                {\r\n                                    week.map(day => {\r\n                                        const classes = classnames(\r\n                                            \"day\",\r\n                                            day.disable ? \"disable-day\" : \"\",\r\n                                            compareDates(day.date, new Date()) ? \"today\" : '',\r\n                                            compareDates(day.date, selectedDate) ? \"selected\" : '',\r\n                                        );\r\n                                        return <span\r\n                                            key={day.date.toString()}\r\n                                            onClick={() => setSelectedDate(day.date)}\r\n                                            className={classes}\r\n                                            id={day.date.getDate().toString()}>\r\n                                            {day.date.getDate()}\r\n                                        </span>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button className=\"clear\" onClick={() => {\r\n                        const today = new Date();\r\n                        setMonthIndex(today.getMonth());\r\n                        const newDates = startedFromSun ? getDates(today.getFullYear(), today.getMonth()) : getDatesFromMon(today.getFullYear(), today.getMonth());\r\n                        setWeeks(groupByWeek(newDates));\r\n                        setSelectedDate(new Date(1000, 11, 21));\r\n                    }}>{clearMessage}</button>\r\n                    <button className=\"confirm\" onClick={() => onSave(selectedDate)}>{confirmMessage}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </React.Fragment>\r\n\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}