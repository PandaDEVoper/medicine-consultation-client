{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\components\\\\text-field.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { mainColor, dark, darkGrey, disable } from \"../styles\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    justify-content: start;\n    width: 100%;\n\n      \n  `;\nconst Field = styled.p`\n  font-size: 0.8rem;\n  color: ${darkGrey};\n  margin-bottom: 3px;\n\n  /* Phone */\n  @media screen and (max-width: 424px) {\n    font-size: 16px;\n  }\n\n  /* Tablet */\n  @media screen and (max-width: 1025px) and (min-width: 768px) {\n      font-size: 16px;      \n  }\n\n  /* Desktop */\n  @media screen and (min-width: 1025px) {\n    font-size: 14px;\n  }\n`;\nconst ErrorText = styled.span`\n  font-size: 12px;\n  color: #ff3b30;\n  transition: 300ms ease-in-out;\n\n`;\nconst Input = styled.input`\n    text-overflow: ellipsis;\n    width: 100%;\n    outline: none;\n    border: solid 1.15px ${disable};\n    border-radius: 5px;\n    padding: 12px;\n    color: ${dark};\n    font-size: 14px;\n    transition: border 0.25s ease-in-out;\n    \n\n    &::placeholder {\n      color: #707070;\n    }\n\n    &:focus {\n      outline: none !important;\n      border: 1.15px solid ${mainColor};\n      color: ${dark};\n    }\n\n    i {\n      font-size: 14px;\n    }\n\n    /* Phone */\n    @media screen and (max-width: 424px) {\n      font-size: 16px;\n    }\n\n\n    /* Tablet */\n    @media screen and (max-width: 1025px) and (min-width: 768px) {\n      font-size: 16px;\n      padding: 15px;\n      width: 100%;\n    }\n\n    /* Desktop */\n    @media screen and (min-width: 1025px) {\n      font-size: 14px;\n    }\n  `;\nconst Row = styled.div`\n  width: calc(100% + 14px);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst ShowPassword = styled.div`\n  border-radius: 50%;\n  width: 14px;\n  position: relative;\n  z-index: 2;\n  right: 29px;\n  cursor: pointer;\n\n  &:hover {\n    color: #b2b2b2;\n  }\n\n\n\n`;\n\nconst TextField = props => {\n  var _props$styles, _props$styles2, _props$styles3, _props$styles4, _props$type;\n\n  // let styles = {};\n  // if (props.useTextHint && props.type === \"password\") {\n  //   styles = props.value.trim() === \"\" ? {} : { letterSpacing: \"5px\", width: \"calc(100% + 14px)\" };\n  // } else {\n  // }\n  const styles = props.type === \"password\" && !props.showPassword ? {\n    letterSpacing: \"5px\",\n    width: \"calc(100% + 14px)\"\n  } : {};\n  let inputStyles = ((_props$styles = props.styles) === null || _props$styles === void 0 ? void 0 : _props$styles.input) || {};\n  inputStyles = { ...inputStyles,\n    ...styles,\n    ...((_props$styles2 = props.styles) === null || _props$styles2 === void 0 ? void 0 : _props$styles2.input)\n  };\n\n  if (props.type === \"password\" && !props.showPassword && !props.useTextHint) {\n    inputStyles = { ...inputStyles,\n      letterSpacing: \"5px\"\n    };\n  }\n\n  if (props.type === \"password\" && props.useTextHint) {\n    var _props$value;\n\n    if (((_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.trim()) === \"\") {\n      inputStyles = { ...inputStyles,\n        letterSpacing: \"0px\",\n        width: \"100%\"\n      };\n    } else {\n      inputStyles = { ...inputStyles,\n        letterSpacing: \"5px\",\n        width: \"100%\"\n      };\n    }\n  }\n\n  if (props.error) {\n    inputStyles = { ...inputStyles,\n      border: \"1.15px solid #ff3b30\"\n    };\n  }\n\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    React.createElement(Container, {\n      style: ((_props$styles3 = props.styles) === null || _props$styles3 === void 0 ? void 0 : _props$styles3.container) || {},\n      className: \"text-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      style: ((_props$styles4 = props.styles) === null || _props$styles4 === void 0 ? void 0 : _props$styles4.field) || {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, props.field), props.field === \"Пароль\" ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Input, Object.assign({\n      id: props.inputId,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur,\n      ref: props.inputRef\n    },\n    /* \r\n    // @ts-ignore */\n    {}, {\n      style: inputStyles,\n      placeholder: props.hint,\n      onChange: e => props.onChange(e.target.value),\n      type: props.showPassword && props.value !== \"\" ? \"text\" : \"password\",\n      value: props.value,\n      \"data-test\": props.inputDataTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(ShowPassword, {\n      id: \"show-password-button\",\n      style: {\n        color: props.showPassword ? \"#282828\" : \"#ccc\"\n      },\n      onClick: props.onShowPasswordChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }, props.showPassword && props.value !== \"\" ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-eye-slash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 56\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 95\n      }\n    }))) : /*#__PURE__*/React.createElement(Input, Object.assign({\n      id: props.inputId,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur,\n      ref: props.inputRef\n    },\n    /* \r\n    // @ts-ignore */\n    {}, {\n      style: inputStyles,\n      placeholder: props.hint,\n      onChange: e => props.onChange(e.target.value),\n      type: (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : \"text\",\n      value: props.value,\n      \"data-test\": props.inputDataTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }\n    })), !props.needErrorHandle ? props.error ? /*#__PURE__*/React.createElement(ErrorText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 48\n      }\n    }, props.error) : /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      className: \"textfield-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 87\n      }\n    }, \"\\u2800\") : \"\")\n  );\n};\n\nexport default TextField;\nexport { Input, ErrorText, Row, Field, Container };","map":{"version":3,"sources":["C:/react/medicine-consultation/client/src/components/text-field.tsx"],"names":["React","styled","mainColor","dark","darkGrey","disable","Container","div","Field","p","ErrorText","span","Input","input","Row","ShowPassword","TextField","props","styles","type","showPassword","letterSpacing","width","inputStyles","useTextHint","value","trim","error","border","container","field","inputId","onFocus","onBlur","inputRef","hint","e","onChange","target","inputDataTest","color","onShowPasswordChanged","needErrorHandle","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { mainColor, dark, darkGrey, disable } from \"../styles\";\r\n\r\n\r\ntype Props = {\r\n  validator?: any;\r\n  onFocus?: () => void;\r\n  onBlur?: () => void;\r\n  inputId?: string; // user for testing\r\n  onChange: (value: string) => void;\r\n  value?: string;\r\n  field?: string;\r\n  hint?: string;\r\n  type?: string;\r\n  inputRef?: any;\r\n  error?: string;\r\n  needErrorHandle?: boolean;\r\n  onShowPasswordChanged?: () => void;\r\n  showPassword?: boolean;\r\n  styles?: {\r\n    container?: object;\r\n    field?: object;\r\n    input?: object;\r\n  };\r\n  inputDataTest?: string;\r\n  useTextHint?: boolean;\r\n  removePassswordIcon?: boolean;\r\n  rows?: number;\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    justify-content: start;\r\n    width: 100%;\r\n\r\n      \r\n  `;\r\n\r\nconst Field = styled.p`\r\n  font-size: 0.8rem;\r\n  color: ${darkGrey};\r\n  margin-bottom: 3px;\r\n\r\n  /* Phone */\r\n  @media screen and (max-width: 424px) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  /* Tablet */\r\n  @media screen and (max-width: 1025px) and (min-width: 768px) {\r\n      font-size: 16px;      \r\n  }\r\n\r\n  /* Desktop */\r\n  @media screen and (min-width: 1025px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst ErrorText = styled.span`\r\n  font-size: 12px;\r\n  color: #ff3b30;\r\n  transition: 300ms ease-in-out;\r\n\r\n`;\r\n\r\nconst Input = styled.input`\r\n    text-overflow: ellipsis;\r\n    width: 100%;\r\n    outline: none;\r\n    border: solid 1.15px ${disable};\r\n    border-radius: 5px;\r\n    padding: 12px;\r\n    color: ${dark};\r\n    font-size: 14px;\r\n    transition: border 0.25s ease-in-out;\r\n    \r\n\r\n    &::placeholder {\r\n      color: #707070;\r\n    }\r\n\r\n    &:focus {\r\n      outline: none !important;\r\n      border: 1.15px solid ${mainColor};\r\n      color: ${dark};\r\n    }\r\n\r\n    i {\r\n      font-size: 14px;\r\n    }\r\n\r\n    /* Phone */\r\n    @media screen and (max-width: 424px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n\r\n    /* Tablet */\r\n    @media screen and (max-width: 1025px) and (min-width: 768px) {\r\n      font-size: 16px;\r\n      padding: 15px;\r\n      width: 100%;\r\n    }\r\n\r\n    /* Desktop */\r\n    @media screen and (min-width: 1025px) {\r\n      font-size: 14px;\r\n    }\r\n  `;\r\n\r\n\r\nconst Row = styled.div`\r\n  width: calc(100% + 14px);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst ShowPassword = styled.div`\r\n  border-radius: 50%;\r\n  width: 14px;\r\n  position: relative;\r\n  z-index: 2;\r\n  right: 29px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #b2b2b2;\r\n  }\r\n\r\n\r\n\r\n`;\r\n\r\nconst TextField: React.FC<Props> = (props: Props) => {\r\n\r\n  // let styles = {};\r\n\r\n  // if (props.useTextHint && props.type === \"password\") {\r\n  //   styles = props.value.trim() === \"\" ? {} : { letterSpacing: \"5px\", width: \"calc(100% + 14px)\" };\r\n  // } else {\r\n\r\n  // }\r\n\r\n  const styles = props.type === \"password\" && !props.showPassword ? { letterSpacing: \"5px\", width: \"calc(100% + 14px)\" } : {};\r\n\r\n  let inputStyles = props.styles?.input || {};\r\n  inputStyles = {\r\n    ...inputStyles,\r\n    ...styles,\r\n    ...props.styles?.input\r\n  }\r\n\r\n  if (props.type === \"password\" && !props.showPassword && !props.useTextHint) {\r\n    inputStyles = {\r\n      ...inputStyles,\r\n      letterSpacing: \"5px\",\r\n    }\r\n  }\r\n\r\n  if (props.type === \"password\" && props.useTextHint) {\r\n    if (props.value?.trim() === \"\") {\r\n      inputStyles = {\r\n        ...inputStyles,\r\n        letterSpacing: \"0px\",\r\n        width: \"100%\"\r\n      }\r\n    } else {\r\n      inputStyles = {\r\n        ...inputStyles,\r\n        letterSpacing: \"5px\",\r\n        width: \"100%\"\r\n      }\r\n    }\r\n  }\r\n\r\n  if (props.error) {\r\n    inputStyles = {\r\n      ...inputStyles,\r\n      border: \"1.15px solid #ff3b30\"\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <Container style={props.styles?.container || {}} className=\"text-field\" >\r\n      {/*\r\n       // @ts-ignore */}\r\n      <Field style={props.styles?.field || {}}>{props.field}</Field>\r\n      {/*\r\n          // @ts-ignore */}\r\n      {props.field === \"Пароль\" ? <Row >\r\n        <Input\r\n          id={props.inputId}\r\n          onFocus={props.onFocus}\r\n          onBlur={props.onBlur}\r\n          ref={props.inputRef}\r\n          {/* \r\n          // @ts-ignore */ ...{}}\r\n          style={inputStyles}\r\n          placeholder={props.hint}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type={props.showPassword && props.value !== \"\" ? \"text\" : \"password\"}\r\n          value={props.value}\r\n          data-test={props.inputDataTest}\r\n        />\r\n\r\n        <ShowPassword id=\"show-password-button\" style={{ color: props.showPassword ? \"#282828\" : \"#ccc\" }} onClick={props.onShowPasswordChanged}>\r\n          {\r\n            props.showPassword && props.value !== \"\" ? <i className=\"fa fa-eye-slash\" ></i> : <i className=\"fa fa-eye\"></i>\r\n\r\n          }\r\n        </ShowPassword>\r\n      </Row> : <Input\r\n\r\n          id={props.inputId}\r\n          onFocus={props.onFocus}\r\n          onBlur={props.onBlur}\r\n          ref={props.inputRef}\r\n          {/* \r\n          // @ts-ignore */ ...{}}\r\n          style={inputStyles}\r\n          placeholder={props.hint}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          type={props.type ?? \"text\"}\r\n          value={props.value}\r\n          data-test={props.inputDataTest}\r\n        />}\r\n\r\n      {\r\n        !props.needErrorHandle ? props.error ? <ErrorText>{props.error}</ErrorText> : <p style={{ fontSize: \"12px\" }} className=\"textfield-error\">⠀</p> : \"\"\r\n      }\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n\r\nexport {\r\n  Input,\r\n  ErrorText,\r\n  Row,\r\n  Field,\r\n  Container,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}