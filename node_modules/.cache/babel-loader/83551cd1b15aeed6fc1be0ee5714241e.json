{"ast":null,"code":"var _jsxFileName = \"c:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\modules\\\\admin\\\\index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from 'react-protected-route-component';\nimport App from \"./App\";\nimport Login from \"./modules/Login/Login\";\nimport store from \"./store\";\n\nconst Module = () => {\n  const [isLogin, setIsLogin] = useState();\n  useEffect(() => {\n    // @ts-ignore\n    store.checkAdminId().then(data => {\n      setIsLogin(data);\n      console.log(isLogin);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, {\n    path: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, isLogin === undefined ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }, \"Loading...\") : isLogin ? /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 69\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/admin-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 79\n    }\n  }));\n  return /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: \"/admin\",\n    redirectRoute: \"/admin-login\",\n    guardFunction: store.checkAdminId,\n    component: () => /*#__PURE__*/React.createElement(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 123\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Module;\nexport { Login };","map":{"version":3,"sources":["c:/react/medicine-consultation/client/src/modules/admin/index.tsx"],"names":["React","useState","useEffect","Route","Redirect","ProtectedRoute","App","Login","store","Module","isLogin","setIsLogin","checkAdminId","then","data","console","log","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAE3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,KAAK,CAACI,YAAN,GAAqBC,IAArB,CAA0BC,IAAI,IAAI;AAAEH,MAAAA,UAAU,CAACG,IAAD,CAAV;AAAkBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAAuB,KAA7E;AACH,GAHQ,EAGN,EAHM,CAAT;AAOA,sBAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECA,OAAO,KAAKO,SAAZ,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB,GAA8CP,OAAO,gBAAG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAa,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnE,CAAP;AAMA,sBAAO,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,QAArB;AAA8B,IAAA,aAAa,EAAC,cAA5C;AAA2D,IAAA,aAAa,EAAEF,KAAK,CAACI,YAAhF;AAA8F,IAAA,SAAS,EAAE,mBAAM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAlBD;;AAoBA,eAAeH,MAAf;AAEA,SAASF,KAAT","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ProtectedRoute from 'react-protected-route-component'\r\nimport App from \"./App\";\r\nimport Login from \"./modules/Login/Login\";\r\nimport store from \"./store\";\r\n\r\nconst Module: React.FC = () => {\r\n\r\n    const [isLogin, setIsLogin] = useState();\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        store.checkAdminId().then(data => { setIsLogin(data); console.log(isLogin); });\r\n    }, []);\r\n\r\n\r\n\r\n    return <Route path=\"/admin\" >\r\n        {\r\n            isLogin === undefined ? <h1>Loading...</h1> : isLogin ? <App /> : <Redirect to=\"/admin-login\" />\r\n        }\r\n    </Route>\r\n\r\n    return <ProtectedRoute path=\"/admin\" redirectRoute=\"/admin-login\" guardFunction={store.checkAdminId} component={() => <App />} />\r\n}\r\n\r\nexport default Module;\r\n\r\nexport { Login };\r\n"]},"metadata":{},"sourceType":"module"}