{"ast":null,"code":"var _jsxFileName = \"c:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\modules\\\\auth\\\\pages\\\\reset-password.tsx\";\nimport React from \"react\";\nimport { reaction } from 'mobx';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport TextField from \"../../../components/text-field\";\nimport { LockIcon, DoneIcon } from \"../icons\";\nimport ConfirmButton from \"../../../components/confirm-button\";\nimport PasswordError from \"../components/password-error\";\nimport controller from \"../stores/reset-password\";\nimport Badge from \"../components/badge\";\n\nconst ResetPasswordPage = () => {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  const goHome = () => setTimeout(() => history.push(\"/login\"), 5500);\n\n  reaction(() => controller.successOperation, arg => {\n    if (arg) {\n      goHome();\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    icon: DoneIcon,\n    title: \"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044E!\",\n    isOpen: controller.successOperation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u0430\\u0448\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u044B \\u043D\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0443. \\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435 \\u043E \\u0442\\u043E\\u043C, \\u043A\\u0430\\u043A \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442 \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441 \\u0432\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043F\\u043E\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C \", /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 105\n    }\n  }, \"\\u0437\\u0434\\u0435\\u0441\\u044C\"), \".\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"reset-password-module\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"illustration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LockIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtitle\",\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: value => controller.password1 = value,\n    hint: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    value: controller.password1,\n    needErrorHandle: true,\n    type: \"password\",\n    useTextHint: true,\n    removePassswordIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: value => controller.password2 = value,\n    hint: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    value: controller.password2,\n    needErrorHandle: true,\n    type: \"password\",\n    useTextHint: true,\n    removePassswordIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PasswordError, {\n    error: controller.passwordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmButton, {\n    content: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    onConfirm: () => {\n      controller.sendResetPasswordRequest(id);\n    },\n    borderRadius: \"7px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default observer(ResetPasswordPage);","map":{"version":3,"sources":["c:/react/medicine-consultation/client/src/modules/auth/pages/reset-password.tsx"],"names":["React","reaction","useParams","useHistory","observer","TextField","LockIcon","DoneIcon","ConfirmButton","PasswordError","controller","Badge","ResetPasswordPage","history","id","goHome","setTimeout","push","successOperation","arg","value","password1","password2","passwordError","sendResetPasswordRequest"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { reaction } from 'mobx';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport TextField from \"../../../components/text-field\";\r\nimport { LockIcon, DoneIcon } from \"../icons\";\r\nimport ConfirmButton from \"../../../components/confirm-button\";\r\nimport PasswordError from \"../components/password-error\";\r\nimport controller from \"../stores/reset-password\";\r\nimport Badge from \"../components/badge\";\r\n\r\n\r\nconst ResetPasswordPage: React.FC = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { id } = useParams();\r\n\r\n    const goHome = () =>\r\n        setTimeout(() => history.push(\"/login\"), 5500);\r\n\r\n    reaction(() => controller.successOperation, (arg) => {\r\n        if (arg) {\r\n            goHome();\r\n        }\r\n    });\r\n\r\n\r\n    return <React.Fragment>\r\n        <Badge icon={DoneIcon} title=\"Спасибо за регистрацию!\" isOpen={controller.successOperation}>\r\n            Ваши данные отправлены на проверку. Подробнее о том, как работает сервис вы можете почитать <a>здесь</a>.</Badge>\r\n        <section className=\"reset-password-module\">\r\n            <main>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"illustration\">\r\n                        <LockIcon />\r\n                    </div>\r\n                    <h1 id=\"password\">Восстановление пароля</h1>\r\n                    <p className=\"subtitle\" id=\"password\">\r\n                        Введите Ваш новый пароль\r\n                        </p>\r\n                    <TextField\r\n                        onChange={(value) => controller.password1 = value}\r\n                        hint=\"Введите ваш пароль\"\r\n                        value={controller.password1}\r\n                        needErrorHandle={true}\r\n                        type=\"password\"\r\n                        useTextHint={true}\r\n                        removePassswordIcon={true}\r\n                    />\r\n                    <TextField\r\n                        onChange={(value) => controller.password2 = value}\r\n                        hint=\"Подтвердите ваш пароль\"\r\n                        value={controller.password2}\r\n                        needErrorHandle={true}\r\n                        type=\"password\"\r\n                        useTextHint={true}\r\n                        removePassswordIcon={true}\r\n                    />\r\n\r\n                    <PasswordError error={controller.passwordError} />\r\n\r\n                    <ConfirmButton\r\n                        content=\"Сменить пароль\"\r\n                        onConfirm={() => {\r\n                            controller.sendResetPasswordRequest(id);\r\n                        }}\r\n                        borderRadius=\"7px\"\r\n                    />\r\n                </div>\r\n            </main>\r\n        </section>\r\n    </React.Fragment>\r\n\r\n\r\n}\r\n\r\nexport default observer(ResetPasswordPage);"]},"metadata":{},"sourceType":"module"}