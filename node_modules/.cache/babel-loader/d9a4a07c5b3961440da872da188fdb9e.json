{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\modules\\\\consultations\\\\components\\\\appoint\\\\document.tsx\";\nimport React from \"react\";\nimport controller from \"../../controller/appoint-controller\";\nimport { observer } from \"mobx-react\";\nimport { PdfIcon, FileIcon, ImageIcon } from \"../../icons\";\nimport { CloseIcon } from \"../../../doctors/icons\";\nimport formatServices from \"../../../../services/format-services\";\n\nconst Icon = ({\n  type\n}) => {\n  if (type === \"image/jpeg\" || type === \"image/png\") {\n    return /*#__PURE__*/React.createElement(ImageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    });\n  } else if (type === \"application/pdf\") {\n    return /*#__PURE__*/React.createElement(PdfIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(FileIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n};\n\nconst Document = ({\n  index\n}) => {\n  const file = controller.documents[index];\n  const splitted = file.type.split(\"/\");\n  const type = splitted[splitted.length - 1].toUpperCase();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"document-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: file.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, file.name.substring(0, 15) + (file.name.length > 15 ? \"...\" : \"\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, formatServices.formatSize(file.size), \" \", type)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: () => controller.removeDocuments(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default observer(Document);","map":{"version":3,"sources":["C:/react/medicine-consultation/client/src/modules/consultations/components/appoint/document.tsx"],"names":["React","controller","observer","PdfIcon","FileIcon","ImageIcon","CloseIcon","formatServices","Icon","type","Document","index","file","documents","splitted","split","length","toUpperCase","name","substring","formatSize","size","removeDocuments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,SAA5B,QAA6C,aAA7C;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAMA,MAAMC,IAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAEnD,MAAIA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,WAAtC,EAAmD;AAC/C,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIA,IAAI,KAAK,iBAAb,EAAgC;AACnC,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFM,MAEA;AACH,wBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AAEJ,CAVD;;AAYA,MAAMC,QAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAE7C,QAAMC,IAAU,GAAGX,UAAU,CAACY,SAAX,CAAqBF,KAArB,CAAnB;AACA,QAAMG,QAAQ,GAAGF,IAAI,CAACH,IAAL,CAAUM,KAAV,CAAgB,GAAhB,CAAjB;AACA,QAAMN,IAAI,GAAGK,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAR,CAA8BC,WAA9B,EAAb;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,IAAI,CAACH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAEH;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBG,IAAI,CAACM,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,EAAvB,KAA8BP,IAAI,CAACM,IAAL,CAAUF,MAAV,GAAmB,EAAnB,GAAwB,KAAxB,GAAgC,EAA9D,CAAzB,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,cAAc,CAACa,UAAf,CAA0BR,IAAI,CAACS,IAA/B,CAA5B,OAAmEZ,IAAnE,CAFJ,CAFG,eAMH;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,MAAMR,UAAU,CAACqB,eAAX,CAA2BX,KAA3B,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANG,CAAP;AAUH,CAhBD;;AAkBA,eAAeT,QAAQ,CAACQ,QAAD,CAAvB","sourcesContent":["import React from \"react\";\r\nimport controller from \"../../controller/appoint-controller\";\r\nimport { observer } from \"mobx-react\";\r\nimport { PdfIcon, FileIcon, ImageIcon } from \"../../icons\";\r\nimport { CloseIcon } from \"../../../doctors/icons\";\r\nimport formatServices from \"../../../../services/format-services\";\r\n\r\ntype Props = {\r\n    index: number,\r\n}\r\n\r\nconst Icon: React.FC<{ type: string }> = ({ type }) => {\r\n\r\n    if (type === \"image/jpeg\" || type === \"image/png\") {\r\n        return <ImageIcon />;\r\n    } else if (type === \"application/pdf\") {\r\n        return <PdfIcon />;\r\n    } else {\r\n        return <FileIcon />\r\n    }\r\n\r\n}\r\n\r\nconst Document: React.FC<Props> = ({ index }) => {\r\n\r\n    const file: File = controller.documents[index];\r\n    const splitted = file.type.split(\"/\");\r\n    const type = splitted[splitted.length - 1].toUpperCase();\r\n\r\n    return <div className=\"document-button\">\r\n        <Icon type={file.type} />\r\n        <div className=\"info\">\r\n            <span className=\"title\">{file.name.substring(0, 15) + (file.name.length > 15 ? \"...\" : \"\")}</span>\r\n            <span className=\"subtitle\">{formatServices.formatSize(file.size)} {type}</span>\r\n        </div>\r\n        <div className=\"icon\" onClick={() => controller.removeDocuments(index)}>\r\n            <CloseIcon />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default observer(Document);"]},"metadata":{},"sourceType":"module"}