{"ast":null,"code":"var _jsxFileName = \"c:\\\\react\\\\medicine-consultation\\\\client\\\\src\\\\modules\\\\doctors\\\\pages\\\\find-doctor.tsx\";\nimport React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport DoctorWrapper from '../components/doctors-wrapper';\nimport Filter from '../components/filter';\nimport ErrorBadge from '../../../components/error-badge';\nimport controller from \"../controllers/find-doctor-controller\";\n\nconst FindDoctor = () => {\n  // Scroll component\n  useEffect(() => {\n    document.getElementsByClassName(\"doctor-module\")[0].addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  function handleScroll() {\n    const element = document.getElementsByClassName(\"doctor-module\")[0];\n\n    if (element.scrollHeight - element.scrollTop - 1 <= element.clientHeight) {\n      controller.loadNextPage();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ErrorBadge, {\n    isOpen: controller.isErrorBadgeOpen,\n    message: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043D\\u0435\\u043F\\u0440\\u0438\\u0434\\u0432\\u0438\\u0434\\u0435\\u043D\\u043D\\u0430\\u044F \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430. \\u041C\\u044B \\u0443\\u0436\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u043C \\u043D\\u0430\\u0434 \\u044D\\u0442\\u0438\\u043C!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DoctorWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default observer(FindDoctor);","map":{"version":3,"sources":["c:/react/medicine-consultation/client/src/modules/doctors/pages/find-doctor.tsx"],"names":["React","useEffect","observer","DoctorWrapper","Filter","ErrorBadge","controller","FindDoctor","document","getElementsByClassName","addEventListener","handleScroll","window","removeEventListener","element","scrollHeight","scrollTop","clientHeight","loadNextPage","isErrorBadgeOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAIA,MAAMC,UAAoB,GAAG,MAAM;AAE/B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,EAAoDC,gBAApD,CAAqE,QAArE,EAA+EC,YAA/E;AACA,WAAO,MAAMC,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASA,YAAT,GAAwB;AACpB,UAAMG,OAAO,GAAGN,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAhB;;AAEA,QAAIK,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACE,SAA/B,GAA2C,CAA3C,IAAgDF,OAAO,CAACG,YAA5D,EAA0E;AACtEX,MAAAA,UAAU,CAACY,YAAX;AACH;AACJ;;AAED,sBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEZ,UAAU,CAACa,gBADvB;AAEI,IAAA,OAAO,EAAC,iTAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAKH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALG,eAMH,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANG,CAAP;AAWH,CA3BD;;AA6BA,eAAejB,QAAQ,CAACK,UAAD,CAAvB","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport DoctorWrapper from '../components/doctors-wrapper';\r\nimport Filter from '../components/filter';\r\nimport ErrorBadge from '../../../components/error-badge';\r\nimport controller from \"../controllers/find-doctor-controller\";\r\nimport LoadingIndicator from \"../../../components/loading-indicator\";\r\n\r\n\r\nconst FindDoctor: React.FC = () => {\r\n\r\n    // Scroll component\r\n    useEffect(() => {\r\n        document.getElementsByClassName(\"doctor-module\")[0].addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    function handleScroll() {\r\n        const element = document.getElementsByClassName(\"doctor-module\")[0];\r\n\r\n        if (element.scrollHeight - element.scrollTop - 1 <= element.clientHeight) {\r\n            controller.loadNextPage();\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>\r\n        <ErrorBadge\r\n            isOpen={controller.isErrorBadgeOpen}\r\n            message=\"Произошла непридвиденная ошибка. Мы уже работаем над этим!\"\r\n        />\r\n        <Filter />\r\n        <DoctorWrapper />\r\n        {/* <div className={`loading-badge ${controller.isLoading ? \"\" : \"close\"}`}>\r\n            <LoadingIndicator />\r\n        </div> */}\r\n    </React.Fragment>\r\n};\r\n\r\nexport default observer(FindDoctor);"]},"metadata":{},"sourceType":"module"}